name: ci-main

on:
  push:
    tags:
      - '*'


jobs: 

  build-container-to-main:
    name: Build Container üê≥

    environment:
      name: production

    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: üíæ Repository | Check out
        uses: actions/checkout@v2


      #----------------------------------------------
      # Prepare 
      #----------------------------------------------
      - name: ‚ÑπÔ∏è  Prepare | Version
        id: prepare
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_IMAGE }}
          VERSION=latest
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "(if) refs/tags: $VERSION"
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          fi
          
          echo ::set-output name=tags::${TAGS}
          echo "Tags: $TAGS" 
      #----------------------------------------------
      #This is the a separate action that sets up buildx runner
      #----------------------------------------------
      - name: üê≥ Container | Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      #----------------------------------------------
      #       load cached if cache exists
      #----------------------------------------------
      - name: ‚ö°Ô∏è Cache | Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-main-cache
          key: ${{ runner.os }}-buildx-main-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-main-
      #----------------------------------------------
      #Log in to Docker Hub
      #----------------------------------------------
      - name: üê≥ Container | Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      

      #----------------------------------------------
      #Build and push
      #----------------------------------------------
      - name: üê≥ Container | Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-main-cache
          cache-to: type=local,dest=/tmp/.buildx-main-cache-new,mode=max
          #cache-from: type=registry,ref=${{ secrets.DOCKERHUB_IMAGE }}:buildcache
          #cache-to: type=registry,ref=${{ secrets.DOCKERHUB_IMAGE }}:buildcache,mode=max
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          
      
      #----------------------------------------------
      #Clear old cache
      #----------------------------------------------
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üê≥ Container | Move cache
        run: |
          rm -rf /tmp/.buildx-main-cache
          mv /tmp/.buildx-main-cache-new /tmp/.buildx-main-cache
  
  github-release:
    name: Releases üîñ

    needs: build-container-to-main

    environment:
      name: production
      url: 'https://github.com/quaredevil/git-python-template/releases'


    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: üíæ Repository | Check out
        uses: actions/checkout@v2


      #----------------------------------------------
      # Releases 
      #----------------------------------------------
      - name: üîñ Release | Publish Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
  

  deployment-manifests:
    name: Deployment manifests ‚ò∏Ô∏è
    
    needs: github-release

    environment:
      name: production
      url: 'https://rancher-finance-stage.99app.com/'

    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: üíæ Repository | Check out
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      
      #----------------------------------------------
      # Prepare 
      #----------------------------------------------
      - name: ‚ÑπÔ∏è  Prepare | Version
        id: prepare_k8s
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_IMAGE }}
          VERSION="${GITHUB_REF#refs/tags/v}"
          
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo "Tags: $TAGS" 
          
      #----------------------------------------------
      # Kustomize Build
      #----------------------------------------------
      - name: ‚ò∏Ô∏è K8S | Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: ${{ secrets.KUSTOMIZE_VERSION }}

      #----------------------------------------------
      # Kustomize Build
      #----------------------------------------------
      - name: ‚ò∏Ô∏è K8S | Update manifests (kustomize)
        env:
          DOCKERHUB_TAGS: ${{ steps.prepare_k8s.outputs.tags }}

        run: |
          cd .k8s/overlays/production
          kustomize edit set image container-to-change-cd=$DOCKERHUB_TAGS
          cat kustomization.yaml
      #----------------------------------------------
      # Commit code 
      #----------------------------------------------
      - name: üíæ Repository | Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "ü§ñ change image tag (manifests k8s)"
      
      
      #----------------------------------------------
      # Push code 
      #----------------------------------------------
      - name: üíæ Repository | Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          #branch: ${{ github.ref }}