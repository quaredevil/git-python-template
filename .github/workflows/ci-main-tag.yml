name: ci-main-tag-production

on:
  create:
    tags:
      - v*

env:
  python-version: 3.8

jobs: 

  build-container:
    name: Build Container

    environment:
      name: production
      url: 'https://rancher-finance-stage.99app.com/'

    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: üíæ Repository | Check out
        uses: actions/checkout@v2

      #----------------------------------------------
      # Informations
      #----------------------------------------------
      - name: ‚ÑπÔ∏è | Get some informations
        id: get_some_informations
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_RELEASE_VERSION::${GITHUB_REF#refs/heads/release/}

      - name: ‚ÑπÔ∏è | Check some informations
        run: |
          echo $SOURCE_BRANCH
          echo $SOURCE_RELEASE_VERSION
        env:
          SOURCE_BRANCH: ${{ steps.get_some_informations.outputs.SOURCE_BRANCH }}
          SOURCE_RELEASE_VERSION: ${{ steps.get_some_informations.outputs.SOURCE_RELEASE_VERSION }}
          
      #----------------------------------------------
      # Prepare 
      #----------------------------------------------
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=metcalfc/docker-action-examples
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}

      #----------------------------------------------
      #Log in to Docker Hub
      #----------------------------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      

      #----------------------------------------------
      #Build and push
      #----------------------------------------------
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          
          tags: |
            ${{ secrets.DOCKERHUB_IMAGE }}:latest
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ github.sha }}
